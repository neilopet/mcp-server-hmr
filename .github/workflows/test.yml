name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        deno: [1.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno }}
      
      - name: Verify formatting
        run: deno fmt --check
      
      - name: Run linter
        run: deno lint
      
      - name: Type check
        run: deno check src/mod.ts
      
      - name: Run tests
        run: deno test --allow-all tests/
      
      - name: Generate coverage
        if: matrix.os == 'ubuntu-latest'
        run: |
          deno test --allow-all --coverage=coverage/ tests/
          deno coverage coverage/ --lcov --output=coverage.lcov
      
      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.lcov
          fail_ci_if_error: false